#!/usr/bin/env node

var program = require('commander');
var helper = require('../lib/helper');

program
    .command('pull')
    .description('Pull configured repos')
    .option('-a, --all', 'Act on all configured repos')
    .action(function(options) {
        if (options.all) {
            helper.git.pullAll(helper.done);
        } else {
            helper.git.pull(options, helper.done);
        }
    });

program
    .command('status')
    .alias('st')
    .description('Get the status for all repos')
    .option('-a, --all', 'Act on all configured repos')
    .action(function(options) {
        if (options.all) {
            helper.git.statusAll(helper.done);
        } else {
            helper.git.status(options, helper.done);
        }
    });

program
    .command('stash-list')
    .alias('sl')
    .description('Show stashes for repos')
    .option('-a, --all', 'Act on all configured repos')
    .action(function(options) {
        if (options.all) {
            helper.git.stashListAll(helper.done);
        } else {
            helper.git.stashList(options, helper.done);
        }
    });

program
    .command('checkout')
    .alias('co')
    .description('Checkout [branch] branch for repos')
    .option('-a, --all', 'Act on all configured repos')
    .option('-b, --branch [name]', 'Specify the branch to checkout', 'develop')
    .action(function(options) {
        if (options.all) {
            helper.git.checkoutAll(options, helper.done);
        } else {
            helper.git.checkout({
                branch: program.args[1].branch,
                project: options
            }, helper.done);
        }
    });

program.parse(process.argv)
